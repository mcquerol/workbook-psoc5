ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_irqendin.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_IRQ_run_next_task,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_IRQ_run_next_task, %function
  24              	EE_IRQ_run_next_task:
  25              	.LFB140:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * CVS: $Id: ee_irqendin.c,v 1.2 2006/01/24 10:21:14 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  56:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "trcKernelPort.h"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
  58:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
  59:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Index used to give ISR2 Temporary TID value and to access at
  60:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    EE_isr2_nesting_level array */
  61:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_UREG EE_isr2_index = EE_UREG_MINUS1;
  62:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  63:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_TID EE_oo_assign_TID_to_ISR2( void ) {
  65:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  66:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index == EE_UREG_MINUS1 ) {
  68:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_index = 0U;
  69:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[0] = actual_nesting;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else if ( EE_isr2_nesting_level[EE_isr2_index] < actual_nesting ) {
  71:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     ++EE_isr2_index;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[EE_isr2_index] = actual_nesting;
  73:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
  74:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Nothing to do added just for MISRA 2004 Required Rule 14.10 */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
  76:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   return (EE_MAX_TASK + (EE_TID)EE_isr2_index);
  78:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
  79:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  80:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* [OS369]: If a Category 2 OsIsr calls GetResource() and ends (returns)
  81:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     without calling the corresponding ReleaseResource(), the Operating System
  82:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     shall perform the ReleaseResource() call and shall call the ErrorHook()
  83:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     (if configured) with the status E_OS_RESOURCE. */
  84:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void );
  85:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void ) {
  86:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Check if the index is valid -> at least one ISR2 got a resource */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index != EE_UREG_MINUS1 ) {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* N.B This method MUST be called at the end of IRQ post-stub but BEFORE
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****        decrementing nesting. */
  90:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  91:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Check if this is the right level where do clean-up */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( EE_isr2_nesting_level[EE_isr2_index] == actual_nesting ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_TID current_isr2_tid = (EE_TID)EE_isr2_index + EE_MAX_TASK;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef __OO_ISR2_RESOURCES__
  96:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* OS369 */
  97:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_oo_release_all_resources(current_isr2_tid) != EE_UREG_MINUS1 ) {
  98:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_RESOURCE);
  99:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_RESOURCE);
 100:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 101:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ */
 102:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef EE_AS_USER_SPINLOCKS__
 103:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Force Spinlock Release */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_as_release_all_spinlocks(current_isr2_tid) !=
 105:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         INVALID_SPINLOCK )
 106:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_SPINLOCK);
 108:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_SPINLOCK);
 109:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 110:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Decrement ISR2 index (from 0U to EE_UREG_MINUS1 is handled by
 113:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          unsigned wraparound) */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       --EE_isr2_index;
 115:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 116:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 117:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 118:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void );
 120:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void ) {}
 121:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 123:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifndef __PRIVATE_IRQ_END_INSTANCE__
 124:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void );
 126:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 128:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 129:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
  27              		.loc 1 129 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 3, -16
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
 130:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID tnext;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   tnext = EE_rq2stk_exchange();
  37              		.loc 1 131 0
  38 0002 FFF7FEFF 		bl	EE_rq2stk_exchange
  39              	.LVL0:
  40 0006 0446     		mov	r4, r0
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 4


  41              	.LVL1:
 132:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_th_waswaiting[tnext] ) {
  42              		.loc 1 132 0
  43 0008 0E4B     		ldr	r3, .L5
  44 000a 53F82030 		ldr	r3, [r3, r0, lsl #2]
  45 000e B3B1     		cbz	r3, .L2
  46              	.LBB33:
 133:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_waswaiting[tnext] = EE_FALSE;
  47              		.loc 1 133 0
  48 0010 0022     		movs	r2, #0
  49 0012 0C4B     		ldr	r3, .L5
  50 0014 43F82020 		str	r2, [r3, r0, lsl #2]
  51              	.LBB34:
  52              	.LBB35:
  53              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 5


  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 6


 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 7


 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 8


 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  54              		.loc 2 240 0
  55 0018 0B4D     		ldr	r5, .L5+4
  56 001a 2968     		ldr	r1, [r5]
  57              	.LBE35:
  58              	.LBE34:
 134:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 135:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
  59              		.loc 1 135 0
  60 001c 0131     		adds	r1, r1, #1
  61 001e 3020     		movs	r0, #48
  62              	.LVL2:
  63 0020 FFF7FEFF 		bl	prvTraceStoreEvent1
  64              	.LVL3:
  65              	.LBB36:
  66              	.LBB37:
  67              		.loc 2 240 0
  68 0024 2968     		ldr	r1, [r5]
  69              	.LBE37:
  70              	.LBE36:
 136:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
  71              		.loc 1 136 0
  72 0026 094B     		ldr	r3, .L5+8
  73 0028 53F82120 		ldr	r2, [r3, r1, lsl #2]
  74 002c 0131     		adds	r1, r1, #1
  75 002e 3720     		movs	r0, #55
  76 0030 FFF7FEFF 		bl	prvTraceStoreEvent2
  77              	.LVL4:
  78              	.LBB38:
  79              	.LBB39:
  80              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 9


   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 10


  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 11


 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_ready(EE_TID tid)
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 12


 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = tid;
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_stacked(EE_TID tid)
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = EE_std_mark_tid_stacked(tid);
  81              		.loc 3 179 0
  82 0034 44F00044 		orr	r4, r4, #-2147483648
  83              	.LVL5:
  84 0038 054B     		ldr	r3, .L5+12
  85 003a 1C60     		str	r4, [r3]
  86 003c 38BD     		pop	{r3, r4, r5, pc}
  87              	.LVL6:
  88              	.L2:
  89              	.LBE39:
  90              	.LBE38:
  91              	.LBE33:
  92              	.LBB40:
  93              	.LBB41:
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
  94              		.loc 3 173 0
  95 003e 044B     		ldr	r3, .L5+12
  96 0040 1860     		str	r0, [r3]
  97 0042 38BD     		pop	{r3, r4, r5, pc}
  98              	.L6:
  99              		.align	2
 100              	.L5:
 101 0044 00000000 		.word	EE_th_waswaiting
 102 0048 00000000 		.word	EE_stkfirst
 103 004c 00000000 		.word	EE_th_ready_prio
 104 0050 00000000 		.word	EE_std_endcycle_next_tid
 105              	.LBE41:
 106              	.LBE40:
 107              		.cfi_endproc
 108              	.LFE140:
 109              		.size	EE_IRQ_run_next_task, .-EE_IRQ_run_next_task
 110              		.section	.text.EE_IRQ_end_instance,"ax",%progbits
 111              		.align	2
 112              		.global	EE_IRQ_end_instance
 113              		.thumb
 114              		.thumb_func
 115              		.type	EE_IRQ_end_instance, %function
 116              	EE_IRQ_end_instance:
 117              	.LFB141:
 137:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
 138:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_call_PreTaskHook();
 139:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(tnext);
 140:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 141:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_ready(tnext);
 142:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 143:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 144:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ECC1__ || __OO_ECC2__ */
 145:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_hal_IRQ_ready(EE_rq2stk_exchange());
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 13


 148:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 149:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 150:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 151:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 152:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ handler.
 153:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    If the HAL allow IRQ nesting the C_end_instance should work as follows:
 154:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - it must implement the preemption test only if it is the last IRQ on the
 155:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      stack
 156:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - if there are other interrupts on the stack the IRQ end_instance should do
 157:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      nothing
 158:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_instance( void )
 160:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 118              		.loc 1 160 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 10B5     		push	{r4, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 161:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID rqfirst, current;
 162:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 163:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   rqfirst = EE_rq_queryfirst();
 126              		.loc 1 163 0
 127 0002 FFF7FEFF 		bl	EE_rq_queryfirst
 128              	.LVL7:
 129              	.LBB42:
 130              	.LBB43:
 131              		.loc 2 240 0
 132 0006 124B     		ldr	r3, .L12
 133 0008 1B68     		ldr	r3, [r3]
 134              	.LBE43:
 135              	.LBE42:
 164:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   current = EE_stk_queryfirst();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( (rqfirst != EE_NIL) && (EE_sys_ceiling < EE_th_ready_prio[rqfirst]) ) {
 136              		.loc 1 166 0
 137 000a B0F1FF3F 		cmp	r0, #-1
 138 000e 1AD0     		beq	.L8
 139              		.loc 1 166 0 is_stmt 0 discriminator 1
 140 0010 104A     		ldr	r2, .L12+4
 141 0012 52F82010 		ldr	r1, [r2, r0, lsl #2]
 142 0016 104A     		ldr	r2, .L12+8
 143 0018 1268     		ldr	r2, [r2]
 144 001a 9142     		cmp	r1, r2
 145 001c 13D9     		bls	.L8
 167:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* We have to schedule a READY thread */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current != EE_NIL ) {
 146              		.loc 1 169 0 is_stmt 1
 147 001e B3F1FF3F 		cmp	r3, #-1
 148 0022 03D0     		beq	.L9
 170:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* There is a post task hook only if a TASK that was RUNNING */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_oo_call_PostTaskHook();
 172:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* The RUNNING TASK is now preempted-> READY status + still in stacked
 173:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          queue */
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 14


 174:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_th_status[current] = READY;
 149              		.loc 1 174 0
 150 0024 0224     		movs	r4, #2
 151 0026 0D49     		ldr	r1, .L12+12
 152 0028 41F82340 		str	r4, [r1, r3, lsl #2]
 153              	.L9:
 175:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 176:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Another TASK is put into the RUNNING state */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_status[rqfirst] = RUNNING;
 154              		.loc 1 178 0
 155 002c 0021     		movs	r1, #0
 156 002e 0B4B     		ldr	r3, .L12+12
 157 0030 43F82010 		str	r1, [r3, r0, lsl #2]
 179:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_sys_ceiling |= EE_th_dispatch_prio[rqfirst];
 158              		.loc 1 180 0
 159 0034 0A4B     		ldr	r3, .L12+16
 160 0036 53F82030 		ldr	r3, [r3, r0, lsl #2]
 161 003a 1A43     		orrs	r2, r2, r3
 162 003c 064B     		ldr	r3, .L12+8
 163 003e 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_th_eq_dispatch_prio(rqfirst);
 183:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* "Press TP start for the first time" for this new activation or realese
 185:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         from wait of the TASK */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_as_tp_active_start_on_TASK_stacking(rqfirst);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the next running TASK, it doesn't directly RUN it */
 188:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_IRQ_run_next_task();
 164              		.loc 1 188 0
 165 0040 FFF7FEFF 		bl	EE_IRQ_run_next_task
 166              	.LVL8:
 167 0044 10BD     		pop	{r4, pc}
 168              	.LVL9:
 169              	.L8:
 170              	.LBB44:
 171              	.LBB45:
 172              		.loc 3 179 0
 173 0046 43F00043 		orr	r3, r3, #-2147483648
 174              	.LVL10:
 175 004a 064A     		ldr	r2, .L12+20
 176 004c 1360     		str	r3, [r2]
 177 004e 10BD     		pop	{r4, pc}
 178              	.L13:
 179              		.align	2
 180              	.L12:
 181 0050 00000000 		.word	EE_stkfirst
 182 0054 00000000 		.word	EE_th_ready_prio
 183 0058 00000000 		.word	EE_sys_ceiling
 184 005c 00000000 		.word	EE_th_status
 185 0060 00000000 		.word	EE_th_dispatch_prio
 186 0064 00000000 		.word	EE_std_endcycle_next_tid
 187              	.LBE45:
 188              	.LBE44:
 189              		.cfi_endproc
 190              	.LFE141:
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 15


 191              		.size	EE_IRQ_end_instance, .-EE_IRQ_end_instance
 192              		.section	.text.EE_IRQ_end_post_stub,"ax",%progbits
 193              		.align	2
 194              		.global	EE_IRQ_end_post_stub
 195              		.thumb
 196              		.thumb_func
 197              		.type	EE_IRQ_end_post_stub, %function
 198              	EE_IRQ_end_post_stub:
 199              	.LFB142:
 189:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 190:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current == EE_NIL ) {
 191:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to the Idle loop */
 192:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( Idle_Context );
 193:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_start_idle();
 194:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     } else {
 195:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to a preempted TASK */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( TASK_Context );
 197:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Enable the Task Timing Protection Set */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_set_from_TASK(current);
 199:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 200:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the Context Switch up, it doesn't directly switch */
 201:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(current);
 202:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 204:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 205:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 206:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ post-stub.
 207:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive do needed clean-up as resetting kernel interrupt nested
 208:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    counter and release gotten resources if application forget to do that as
 209:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    specified by Autosar standard.
 210:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 211:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_post_stub( void ) {
 200              		.loc 1 211 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LBB46:
 206              	.LBB47:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 16


 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 17


 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 18


 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 207              		.loc 2 422 0
 208 0000 034B     		ldr	r3, .L16
 209 0002 1B68     		ldr	r3, [r3]
 210              	.LBE47:
 211              	.LBE46:
 212:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [OS368]: If a Category 2 OsIsr calls DisableAllInterupts()/
 213:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       SuspendAllInterrupts()/SuspendOSInterrupts() and ends (returns)
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 19


 214:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       without calling the corresponding EnableAllInterrupts()/
 215:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       ResumeAllInterrupts() / ResumeOSInterrupts(),
 216:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the Operating System shall perform the missing service and shall call
 217:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the ErrorHook() (if configured) with the status E_OS_DISABLEDINT. */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Only check and reset ISR flags an counters because ISR re-enabling is done
 220:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      in CPU layer */
 221:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_oo_check_disableint_error() )
 212              		.loc 1 221 0
 213 0004 13B1     		cbz	r3, .L14
 222:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   {
 223:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_lasterror(E_OS_DISABLEDINT);
 224:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_notify_error_service(OSId_ISR2Body, E_OS_DISABLEDINT);
 225:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Reset ISRs counter */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_IRQ_disable_count = 0U;
 214              		.loc 1 226 0
 215 0006 0022     		movs	r2, #0
 216 0008 014B     		ldr	r3, .L16
 217 000a 1A60     		str	r2, [r3]
 218              	.L14:
 219 000c 7047     		bx	lr
 220              	.L17:
 221 000e 00BF     		.align	2
 222              	.L16:
 223 0010 00000000 		.word	EE_oo_IRQ_disable_count
 224              		.cfi_endproc
 225              	.LFE142:
 226              		.size	EE_IRQ_end_post_stub, .-EE_IRQ_end_post_stub
 227              		.text
 228              	.Letext0:
 229              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 230              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 231              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
 232              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 233              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 234              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
 235              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 236              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 237              		.section	.debug_info,"",%progbits
 238              	.Ldebug_info0:
 239 0000 A3060000 		.4byte	0x6a3
 240 0004 0400     		.2byte	0x4
 241 0006 00000000 		.4byte	.Ldebug_abbrev0
 242 000a 04       		.byte	0x4
 243 000b 01       		.uleb128 0x1
 244 000c 89060000 		.4byte	.LASF99
 245 0010 0C       		.byte	0xc
 246 0011 3D030000 		.4byte	.LASF100
 247 0015 8A030000 		.4byte	.LASF101
 248 0019 00000000 		.4byte	.Ldebug_ranges0+0
 249 001d 00000000 		.4byte	0
 250 0021 00000000 		.4byte	.Ldebug_line0
 251 0025 02       		.uleb128 0x2
 252 0026 01       		.byte	0x1
 253 0027 06       		.byte	0x6
 254 0028 48040000 		.4byte	.LASF0
 255 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 20


 256 002d 01       		.byte	0x1
 257 002e 08       		.byte	0x8
 258 002f E4020000 		.4byte	.LASF1
 259 0033 02       		.uleb128 0x2
 260 0034 02       		.byte	0x2
 261 0035 05       		.byte	0x5
 262 0036 D1000000 		.4byte	.LASF2
 263 003a 02       		.uleb128 0x2
 264 003b 02       		.byte	0x2
 265 003c 07       		.byte	0x7
 266 003d 20050000 		.4byte	.LASF3
 267 0041 03       		.uleb128 0x3
 268 0042 13060000 		.4byte	.LASF5
 269 0046 04       		.byte	0x4
 270 0047 3F       		.byte	0x3f
 271 0048 4C000000 		.4byte	0x4c
 272 004c 02       		.uleb128 0x2
 273 004d 04       		.byte	0x4
 274 004e 05       		.byte	0x5
 275 004f 62020000 		.4byte	.LASF4
 276 0053 03       		.uleb128 0x3
 277 0054 F1050000 		.4byte	.LASF6
 278 0058 04       		.byte	0x4
 279 0059 41       		.byte	0x41
 280 005a 5E000000 		.4byte	0x5e
 281 005e 02       		.uleb128 0x2
 282 005f 04       		.byte	0x4
 283 0060 07       		.byte	0x7
 284 0061 C0050000 		.4byte	.LASF7
 285 0065 02       		.uleb128 0x2
 286 0066 08       		.byte	0x8
 287 0067 05       		.byte	0x5
 288 0068 19020000 		.4byte	.LASF8
 289 006c 02       		.uleb128 0x2
 290 006d 08       		.byte	0x8
 291 006e 07       		.byte	0x7
 292 006f 5C040000 		.4byte	.LASF9
 293 0073 04       		.uleb128 0x4
 294 0074 04       		.byte	0x4
 295 0075 05       		.byte	0x5
 296 0076 696E7400 		.ascii	"int\000"
 297 007a 02       		.uleb128 0x2
 298 007b 04       		.byte	0x4
 299 007c 07       		.byte	0x7
 300 007d AB040000 		.4byte	.LASF10
 301 0081 02       		.uleb128 0x2
 302 0082 08       		.byte	0x8
 303 0083 04       		.byte	0x4
 304 0084 22030000 		.4byte	.LASF11
 305 0088 03       		.uleb128 0x3
 306 0089 5A020000 		.4byte	.LASF12
 307 008d 05       		.byte	0x5
 308 008e 3F       		.byte	0x3f
 309 008f 25000000 		.4byte	0x25
 310 0093 03       		.uleb128 0x3
 311 0094 4D050000 		.4byte	.LASF13
 312 0098 05       		.byte	0x5
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 21


 313 0099 52       		.byte	0x52
 314 009a 3A000000 		.4byte	0x3a
 315 009e 03       		.uleb128 0x3
 316 009f F2040000 		.4byte	.LASF14
 317 00a3 05       		.byte	0x5
 318 00a4 53       		.byte	0x53
 319 00a5 73000000 		.4byte	0x73
 320 00a9 03       		.uleb128 0x3
 321 00aa 28010000 		.4byte	.LASF15
 322 00ae 05       		.byte	0x5
 323 00af 54       		.byte	0x54
 324 00b0 7A000000 		.4byte	0x7a
 325 00b4 03       		.uleb128 0x3
 326 00b5 22000000 		.4byte	.LASF16
 327 00b9 06       		.byte	0x6
 328 00ba 4D       		.byte	0x4d
 329 00bb A9000000 		.4byte	0xa9
 330 00bf 03       		.uleb128 0x3
 331 00c0 FB000000 		.4byte	.LASF17
 332 00c4 06       		.byte	0x6
 333 00c5 4F       		.byte	0x4f
 334 00c6 A9000000 		.4byte	0xa9
 335 00ca 03       		.uleb128 0x3
 336 00cb D9050000 		.4byte	.LASF18
 337 00cf 06       		.byte	0x6
 338 00d0 54       		.byte	0x54
 339 00d1 B4000000 		.4byte	0xb4
 340 00d5 03       		.uleb128 0x3
 341 00d6 65010000 		.4byte	.LASF19
 342 00da 06       		.byte	0x6
 343 00db 78       		.byte	0x78
 344 00dc 9E000000 		.4byte	0x9e
 345 00e0 05       		.uleb128 0x5
 346 00e1 39020000 		.4byte	.LASF20
 347 00e5 07       		.byte	0x7
 348 00e6 1101     		.2byte	0x111
 349 00e8 93000000 		.4byte	0x93
 350 00ec 05       		.uleb128 0x5
 351 00ed CC020000 		.4byte	.LASF21
 352 00f1 07       		.byte	0x7
 353 00f2 3502     		.2byte	0x235
 354 00f4 B4000000 		.4byte	0xb4
 355 00f8 05       		.uleb128 0x5
 356 00f9 27020000 		.4byte	.LASF22
 357 00fd 07       		.byte	0x7
 358 00fe 5D02     		.2byte	0x25d
 359 0100 B4000000 		.4byte	0xb4
 360 0104 05       		.uleb128 0x5
 361 0105 49060000 		.4byte	.LASF23
 362 0109 07       		.byte	0x7
 363 010a 6C02     		.2byte	0x26c
 364 010c B4000000 		.4byte	0xb4
 365 0110 06       		.uleb128 0x6
 366 0111 0C       		.byte	0xc
 367 0112 07       		.byte	0x7
 368 0113 7202     		.2byte	0x272
 369 0115 41010000 		.4byte	0x141
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 22


 370 0119 07       		.uleb128 0x7
 371 011a 6B020000 		.4byte	.LASF24
 372 011e 07       		.byte	0x7
 373 011f 7302     		.2byte	0x273
 374 0121 EC000000 		.4byte	0xec
 375 0125 00       		.byte	0
 376 0126 07       		.uleb128 0x7
 377 0127 5F000000 		.4byte	.LASF25
 378 012b 07       		.byte	0x7
 379 012c 7402     		.2byte	0x274
 380 012e EC000000 		.4byte	0xec
 381 0132 04       		.byte	0x4
 382 0133 07       		.uleb128 0x7
 383 0134 6C010000 		.4byte	.LASF26
 384 0138 07       		.byte	0x7
 385 0139 7502     		.2byte	0x275
 386 013b EC000000 		.4byte	0xec
 387 013f 08       		.byte	0x8
 388 0140 00       		.byte	0
 389 0141 05       		.uleb128 0x5
 390 0142 99020000 		.4byte	.LASF27
 391 0146 07       		.byte	0x7
 392 0147 7A02     		.2byte	0x27a
 393 0149 10010000 		.4byte	0x110
 394 014d 06       		.uleb128 0x6
 395 014e 08       		.byte	0x8
 396 014f 07       		.byte	0x7
 397 0150 7D02     		.2byte	0x27d
 398 0152 71010000 		.4byte	0x171
 399 0156 07       		.uleb128 0x7
 400 0157 75010000 		.4byte	.LASF28
 401 015b 07       		.byte	0x7
 402 015c 7E02     		.2byte	0x27e
 403 015e EC000000 		.4byte	0xec
 404 0162 00       		.byte	0
 405 0163 07       		.uleb128 0x7
 406 0164 60070000 		.4byte	.LASF29
 407 0168 07       		.byte	0x7
 408 0169 7F02     		.2byte	0x27f
 409 016b F8000000 		.4byte	0xf8
 410 016f 04       		.byte	0x4
 411 0170 00       		.byte	0
 412 0171 05       		.uleb128 0x5
 413 0172 82040000 		.4byte	.LASF30
 414 0176 07       		.byte	0x7
 415 0177 8002     		.2byte	0x280
 416 0179 4D010000 		.4byte	0x14d
 417 017d 08       		.uleb128 0x8
 418 017e 01       		.byte	0x1
 419 017f 2C000000 		.4byte	0x2c
 420 0183 07       		.byte	0x7
 421 0184 8A02     		.2byte	0x28a
 422 0186 97010000 		.4byte	0x197
 423 018a 09       		.uleb128 0x9
 424 018b 1D060000 		.4byte	.LASF31
 425 018f 00       		.byte	0
 426 0190 09       		.uleb128 0x9
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 23


 427 0191 49020000 		.4byte	.LASF32
 428 0195 01       		.byte	0x1
 429 0196 00       		.byte	0
 430 0197 05       		.uleb128 0x5
 431 0198 A1010000 		.4byte	.LASF33
 432 019c 07       		.byte	0x7
 433 019d 8D02     		.2byte	0x28d
 434 019f 7D010000 		.4byte	0x17d
 435 01a3 05       		.uleb128 0x5
 436 01a4 12010000 		.4byte	.LASF34
 437 01a8 07       		.byte	0x7
 438 01a9 9002     		.2byte	0x290
 439 01ab 97010000 		.4byte	0x197
 440 01af 06       		.uleb128 0x6
 441 01b0 0C       		.byte	0xc
 442 01b1 07       		.byte	0x7
 443 01b2 9402     		.2byte	0x294
 444 01b4 DE010000 		.4byte	0x1de
 445 01b8 0A       		.uleb128 0xa
 446 01b9 6300     		.ascii	"c\000"
 447 01bb 07       		.byte	0x7
 448 01bc 9602     		.2byte	0x296
 449 01be 04010000 		.4byte	0x104
 450 01c2 00       		.byte	0
 451 01c3 07       		.uleb128 0x7
 452 01c4 F3000000 		.4byte	.LASF35
 453 01c8 07       		.byte	0x7
 454 01c9 9802     		.2byte	0x298
 455 01cb F8000000 		.4byte	0xf8
 456 01cf 04       		.byte	0x4
 457 01d0 07       		.uleb128 0x7
 458 01d1 00000000 		.4byte	.LASF36
 459 01d5 07       		.byte	0x7
 460 01d6 9A02     		.2byte	0x29a
 461 01d8 A3010000 		.4byte	0x1a3
 462 01dc 08       		.byte	0x8
 463 01dd 00       		.byte	0
 464 01de 05       		.uleb128 0x5
 465 01df 6C030000 		.4byte	.LASF37
 466 01e3 07       		.byte	0x7
 467 01e4 9B02     		.2byte	0x29b
 468 01e6 AF010000 		.4byte	0x1af
 469 01ea 06       		.uleb128 0x6
 470 01eb 10       		.byte	0x10
 471 01ec 07       		.byte	0x7
 472 01ed 9F02     		.2byte	0x29f
 473 01ef 28020000 		.4byte	0x228
 474 01f3 07       		.uleb128 0x7
 475 01f4 3B060000 		.4byte	.LASF38
 476 01f8 07       		.byte	0x7
 477 01f9 A002     		.2byte	0x2a0
 478 01fb CA000000 		.4byte	0xca
 479 01ff 00       		.byte	0
 480 0200 07       		.uleb128 0x7
 481 0201 17070000 		.4byte	.LASF39
 482 0205 07       		.byte	0x7
 483 0206 A102     		.2byte	0x2a1
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 24


 484 0208 EC000000 		.4byte	0xec
 485 020c 04       		.byte	0x4
 486 020d 07       		.uleb128 0x7
 487 020e ED000000 		.4byte	.LASF40
 488 0212 07       		.byte	0x7
 489 0213 A202     		.2byte	0x2a2
 490 0215 EC000000 		.4byte	0xec
 491 0219 08       		.byte	0x8
 492 021a 07       		.uleb128 0x7
 493 021b 66070000 		.4byte	.LASF41
 494 021f 07       		.byte	0x7
 495 0220 A302     		.2byte	0x2a3
 496 0222 F8000000 		.4byte	0xf8
 497 0226 0C       		.byte	0xc
 498 0227 00       		.byte	0
 499 0228 05       		.uleb128 0x5
 500 0229 7B020000 		.4byte	.LASF42
 501 022d 07       		.byte	0x7
 502 022e A402     		.2byte	0x2a4
 503 0230 EA010000 		.4byte	0x1ea
 504 0234 08       		.uleb128 0x8
 505 0235 01       		.byte	0x1
 506 0236 2C000000 		.4byte	0x2c
 507 023a 07       		.byte	0x7
 508 023b 5904     		.2byte	0x459
 509 023d 84020000 		.4byte	0x284
 510 0241 09       		.uleb128 0x9
 511 0242 05000000 		.4byte	.LASF43
 512 0246 00       		.byte	0
 513 0247 09       		.uleb128 0x9
 514 0248 13050000 		.4byte	.LASF44
 515 024c 01       		.byte	0x1
 516 024d 09       		.uleb128 0x9
 517 024e 58010000 		.4byte	.LASF45
 518 0252 02       		.byte	0x2
 519 0253 09       		.uleb128 0x9
 520 0254 DB000000 		.4byte	.LASF46
 521 0258 03       		.byte	0x3
 522 0259 09       		.uleb128 0x9
 523 025a FC050000 		.4byte	.LASF47
 524 025e 04       		.byte	0x4
 525 025f 09       		.uleb128 0x9
 526 0260 38070000 		.4byte	.LASF48
 527 0264 05       		.byte	0x5
 528 0265 09       		.uleb128 0x9
 529 0266 26060000 		.4byte	.LASF49
 530 026a 06       		.byte	0x6
 531 026b 09       		.uleb128 0x9
 532 026c 4C070000 		.4byte	.LASF50
 533 0270 07       		.byte	0x7
 534 0271 09       		.uleb128 0x9
 535 0272 33050000 		.4byte	.LASF51
 536 0276 08       		.byte	0x8
 537 0277 09       		.uleb128 0x9
 538 0278 57050000 		.4byte	.LASF52
 539 027c 09       		.byte	0x9
 540 027d 09       		.uleb128 0x9
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 25


 541 027e F4010000 		.4byte	.LASF53
 542 0282 0A       		.byte	0xa
 543 0283 00       		.byte	0
 544 0284 05       		.uleb128 0x5
 545 0285 03010000 		.4byte	.LASF54
 546 0289 07       		.byte	0x7
 547 028a 6504     		.2byte	0x465
 548 028c 34020000 		.4byte	0x234
 549 0290 03       		.uleb128 0x3
 550 0291 54040000 		.4byte	.LASF55
 551 0295 08       		.byte	0x8
 552 0296 2C       		.byte	0x2c
 553 0297 41000000 		.4byte	0x41
 554 029b 03       		.uleb128 0x3
 555 029c 79040000 		.4byte	.LASF56
 556 02a0 08       		.byte	0x8
 557 02a1 30       		.byte	0x30
 558 02a2 53000000 		.4byte	0x53
 559 02a6 02       		.uleb128 0x2
 560 02a7 04       		.byte	0x4
 561 02a8 04       		.byte	0x4
 562 02a9 EE010000 		.4byte	.LASF57
 563 02ad 02       		.uleb128 0x2
 564 02ae 08       		.byte	0x8
 565 02af 04       		.byte	0x4
 566 02b0 D2050000 		.4byte	.LASF58
 567 02b4 02       		.uleb128 0x2
 568 02b5 01       		.byte	0x1
 569 02b6 08       		.byte	0x8
 570 02b7 48050000 		.4byte	.LASF59
 571 02bb 02       		.uleb128 0x2
 572 02bc 04       		.byte	0x4
 573 02bd 07       		.byte	0x7
 574 02be 40060000 		.4byte	.LASF60
 575 02c2 0B       		.uleb128 0xb
 576 02c3 B0020000 		.4byte	.LASF61
 577 02c7 07       		.byte	0x7
 578 02c8 8404     		.2byte	0x484
 579 02ca 03       		.byte	0x3
 580 02cb DC020000 		.4byte	0x2dc
 581 02cf 0C       		.uleb128 0xc
 582 02d0 63747800 		.ascii	"ctx\000"
 583 02d4 07       		.byte	0x7
 584 02d5 8504     		.2byte	0x485
 585 02d7 84020000 		.4byte	0x284
 586 02db 00       		.byte	0
 587 02dc 0D       		.uleb128 0xd
 588 02dd 01020000 		.4byte	.LASF62
 589 02e1 03       		.byte	0x3
 590 02e2 B1       		.byte	0xb1
 591 02e3 03       		.byte	0x3
 592 02e4 F4020000 		.4byte	0x2f4
 593 02e8 0E       		.uleb128 0xe
 594 02e9 74696400 		.ascii	"tid\000"
 595 02ed 03       		.byte	0x3
 596 02ee B1       		.byte	0xb1
 597 02ef D5000000 		.4byte	0xd5
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 26


 598 02f3 00       		.byte	0
 599 02f4 0F       		.uleb128 0xf
 600 02f5 48000000 		.4byte	.LASF64
 601 02f9 02       		.byte	0x2
 602 02fa 8D01     		.2byte	0x18d
 603 02fc 03       		.byte	0x3
 604 02fd 10       		.uleb128 0x10
 605 02fe 99040000 		.4byte	.LASF67
 606 0302 02       		.byte	0x2
 607 0303 EE       		.byte	0xee
 608 0304 D5000000 		.4byte	0xd5
 609 0308 03       		.byte	0x3
 610 0309 0D       		.uleb128 0xd
 611 030a 2A000000 		.4byte	.LASF63
 612 030e 03       		.byte	0x3
 613 030f AB       		.byte	0xab
 614 0310 03       		.byte	0x3
 615 0311 21030000 		.4byte	0x321
 616 0315 0E       		.uleb128 0xe
 617 0316 74696400 		.ascii	"tid\000"
 618 031a 03       		.byte	0x3
 619 031b AB       		.byte	0xab
 620 031c D5000000 		.4byte	0xd5
 621 0320 00       		.byte	0
 622 0321 0F       		.uleb128 0xf
 623 0322 FB040000 		.4byte	.LASF65
 624 0326 02       		.byte	0x2
 625 0327 9A01     		.2byte	0x19a
 626 0329 03       		.byte	0x3
 627 032a 0B       		.uleb128 0xb
 628 032b 6D050000 		.4byte	.LASF66
 629 032f 07       		.byte	0x7
 630 0330 D203     		.2byte	0x3d2
 631 0332 03       		.byte	0x3
 632 0333 44030000 		.4byte	0x344
 633 0337 0C       		.uleb128 0xc
 634 0338 746D7000 		.ascii	"tmp\000"
 635 033c 07       		.byte	0x7
 636 033d D203     		.2byte	0x3d2
 637 033f D5000000 		.4byte	0xd5
 638 0343 00       		.byte	0
 639 0344 11       		.uleb128 0x11
 640 0345 05030000 		.4byte	.LASF68
 641 0349 02       		.byte	0x2
 642 034a A401     		.2byte	0x1a4
 643 034c CA000000 		.4byte	0xca
 644 0350 03       		.byte	0x3
 645 0351 12       		.uleb128 0x12
 646 0352 6C000000 		.4byte	.LASF69
 647 0356 01       		.byte	0x1
 648 0357 78       		.byte	0x78
 649 0358 03       		.byte	0x3
 650 0359 13       		.uleb128 0x13
 651 035a B8040000 		.4byte	.LASF102
 652 035e 01       		.byte	0x1
 653 035f 80       		.byte	0x80
 654 0360 00000000 		.4byte	.LFB140
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 27


 655 0364 54000000 		.4byte	.LFE140-.LFB140
 656 0368 01       		.uleb128 0x1
 657 0369 9C       		.byte	0x9c
 658 036a 32040000 		.4byte	0x432
 659 036e 14       		.uleb128 0x14
 660 036f 73040000 		.4byte	.LASF72
 661 0373 01       		.byte	0x1
 662 0374 82       		.byte	0x82
 663 0375 D5000000 		.4byte	0xd5
 664 0379 00000000 		.4byte	.LLST0
 665 037d 15       		.uleb128 0x15
 666 037e 10000000 		.4byte	.LBB33
 667 0382 2E000000 		.4byte	.LBE33-.LBB33
 668 0386 0D040000 		.4byte	0x40d
 669 038a 16       		.uleb128 0x16
 670 038b 98000000 		.4byte	.LASF70
 671 038f 01       		.byte	0x1
 672 0390 87       		.byte	0x87
 673 0391 73000000 		.4byte	0x73
 674 0395 9B030000 		.4byte	0x39b
 675 0399 17       		.uleb128 0x17
 676 039a 00       		.byte	0
 677 039b 18       		.uleb128 0x18
 678 039c AC000000 		.4byte	.LASF71
 679 03a0 02       		.byte	0x2
 680 03a1 EB02     		.2byte	0x2eb
 681 03a3 73000000 		.4byte	0x73
 682 03a7 AD030000 		.4byte	0x3ad
 683 03ab 17       		.uleb128 0x17
 684 03ac 00       		.byte	0
 685 03ad 19       		.uleb128 0x19
 686 03ae FD020000 		.4byte	0x2fd
 687 03b2 18000000 		.4byte	.LBB34
 688 03b6 04000000 		.4byte	.LBE34-.LBB34
 689 03ba 01       		.byte	0x1
 690 03bb 87       		.byte	0x87
 691 03bc 19       		.uleb128 0x19
 692 03bd FD020000 		.4byte	0x2fd
 693 03c1 24000000 		.4byte	.LBB36
 694 03c5 02000000 		.4byte	.LBE36-.LBB36
 695 03c9 01       		.byte	0x1
 696 03ca 88       		.byte	0x88
 697 03cb 1A       		.uleb128 0x1a
 698 03cc DC020000 		.4byte	0x2dc
 699 03d0 34000000 		.4byte	.LBB38
 700 03d4 0A000000 		.4byte	.LBE38-.LBB38
 701 03d8 01       		.byte	0x1
 702 03d9 8B       		.byte	0x8b
 703 03da E8030000 		.4byte	0x3e8
 704 03de 1B       		.uleb128 0x1b
 705 03df E8020000 		.4byte	0x2e8
 706 03e3 29000000 		.4byte	.LLST1
 707 03e7 00       		.byte	0
 708 03e8 1C       		.uleb128 0x1c
 709 03e9 24000000 		.4byte	.LVL3
 710 03ed 77060000 		.4byte	0x677
 711 03f1 FC030000 		.4byte	0x3fc
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 28


 712 03f5 1D       		.uleb128 0x1d
 713 03f6 01       		.uleb128 0x1
 714 03f7 50       		.byte	0x50
 715 03f8 02       		.uleb128 0x2
 716 03f9 08       		.byte	0x8
 717 03fa 30       		.byte	0x30
 718 03fb 00       		.byte	0
 719 03fc 1E       		.uleb128 0x1e
 720 03fd 34000000 		.4byte	.LVL4
 721 0401 82060000 		.4byte	0x682
 722 0405 1D       		.uleb128 0x1d
 723 0406 01       		.uleb128 0x1
 724 0407 50       		.byte	0x50
 725 0408 02       		.uleb128 0x2
 726 0409 08       		.byte	0x8
 727 040a 37       		.byte	0x37
 728 040b 00       		.byte	0
 729 040c 00       		.byte	0
 730 040d 1A       		.uleb128 0x1a
 731 040e 09030000 		.4byte	0x309
 732 0412 3E000000 		.4byte	.LBB40
 733 0416 16000000 		.4byte	.LBE40-.LBB40
 734 041a 01       		.byte	0x1
 735 041b 8D       		.byte	0x8d
 736 041c 28040000 		.4byte	0x428
 737 0420 1F       		.uleb128 0x1f
 738 0421 15030000 		.4byte	0x315
 739 0425 01       		.uleb128 0x1
 740 0426 50       		.byte	0x50
 741 0427 00       		.byte	0
 742 0428 20       		.uleb128 0x20
 743 0429 06000000 		.4byte	.LVL0
 744 042d 8E060000 		.4byte	0x68e
 745 0431 00       		.byte	0
 746 0432 21       		.uleb128 0x21
 747 0433 78070000 		.4byte	.LASF74
 748 0437 01       		.byte	0x1
 749 0438 9F       		.byte	0x9f
 750 0439 00000000 		.4byte	.LFB141
 751 043d 68000000 		.4byte	.LFE141-.LFB141
 752 0441 01       		.uleb128 0x1
 753 0442 9C       		.byte	0x9c
 754 0443 A0040000 		.4byte	0x4a0
 755 0447 14       		.uleb128 0x14
 756 0448 40000000 		.4byte	.LASF73
 757 044c 01       		.byte	0x1
 758 044d A1       		.byte	0xa1
 759 044e D5000000 		.4byte	0xd5
 760 0452 3C000000 		.4byte	.LLST2
 761 0456 22       		.uleb128 0x22
 762 0457 55060000 		.4byte	.LASF103
 763 045b 01       		.byte	0x1
 764 045c A1       		.byte	0xa1
 765 045d D5000000 		.4byte	0xd5
 766 0461 19       		.uleb128 0x19
 767 0462 FD020000 		.4byte	0x2fd
 768 0466 06000000 		.4byte	.LBB42
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 29


 769 046a 04000000 		.4byte	.LBE42-.LBB42
 770 046e 01       		.byte	0x1
 771 046f A4       		.byte	0xa4
 772 0470 1A       		.uleb128 0x1a
 773 0471 DC020000 		.4byte	0x2dc
 774 0475 46000000 		.4byte	.LBB44
 775 0479 22000000 		.4byte	.LBE44-.LBB44
 776 047d 01       		.byte	0x1
 777 047e C9       		.byte	0xc9
 778 047f 8D040000 		.4byte	0x48d
 779 0483 1B       		.uleb128 0x1b
 780 0484 E8020000 		.4byte	0x2e8
 781 0488 5A000000 		.4byte	.LLST3
 782 048c 00       		.byte	0
 783 048d 20       		.uleb128 0x20
 784 048e 06000000 		.4byte	.LVL7
 785 0492 9A060000 		.4byte	0x69a
 786 0496 20       		.uleb128 0x20
 787 0497 44000000 		.4byte	.LVL8
 788 049b 59030000 		.4byte	0x359
 789 049f 00       		.byte	0
 790 04a0 21       		.uleb128 0x21
 791 04a1 32010000 		.4byte	.LASF75
 792 04a5 01       		.byte	0x1
 793 04a6 D3       		.byte	0xd3
 794 04a7 00000000 		.4byte	.LFB142
 795 04ab 14000000 		.4byte	.LFE142-.LFB142
 796 04af 01       		.uleb128 0x1
 797 04b0 9C       		.byte	0x9c
 798 04b1 C5040000 		.4byte	0x4c5
 799 04b5 19       		.uleb128 0x19
 800 04b6 44030000 		.4byte	0x344
 801 04ba 00000000 		.4byte	.LBB46
 802 04be 04000000 		.4byte	.LBE46-.LBB46
 803 04c2 01       		.byte	0x1
 804 04c3 DD       		.byte	0xdd
 805 04c4 00       		.byte	0
 806 04c5 23       		.uleb128 0x23
 807 04c6 C0010000 		.4byte	.LASF76
 808 04ca 09       		.byte	0x9
 809 04cb 44       		.byte	0x44
 810 04cc B4000000 		.4byte	0xb4
 811 04d0 23       		.uleb128 0x23
 812 04d1 D9040000 		.4byte	.LASF77
 813 04d5 03       		.byte	0x3
 814 04d6 48       		.byte	0x48
 815 04d7 D5000000 		.4byte	0xd5
 816 04db 24       		.uleb128 0x24
 817 04dc EB040000 		.4byte	0x4eb
 818 04e0 EB040000 		.4byte	0x4eb
 819 04e4 25       		.uleb128 0x25
 820 04e5 BB020000 		.4byte	0x2bb
 821 04e9 02       		.byte	0x2
 822 04ea 00       		.byte	0
 823 04eb 26       		.uleb128 0x26
 824 04ec B4000000 		.4byte	0xb4
 825 04f0 23       		.uleb128 0x23
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 30


 826 04f1 47010000 		.4byte	.LASF78
 827 04f5 07       		.byte	0x7
 828 04f6 B2       		.byte	0xb2
 829 04f7 FB040000 		.4byte	0x4fb
 830 04fb 26       		.uleb128 0x26
 831 04fc DB040000 		.4byte	0x4db
 832 0500 23       		.uleb128 0x23
 833 0501 5D060000 		.4byte	.LASF79
 834 0505 07       		.byte	0x7
 835 0506 B3       		.byte	0xb3
 836 0507 0B050000 		.4byte	0x50b
 837 050b 26       		.uleb128 0x26
 838 050c DB040000 		.4byte	0x4db
 839 0510 24       		.uleb128 0x24
 840 0511 B4000000 		.4byte	0xb4
 841 0515 20050000 		.4byte	0x520
 842 0519 25       		.uleb128 0x25
 843 051a BB020000 		.4byte	0x2bb
 844 051e 02       		.byte	0x2
 845 051f 00       		.byte	0
 846 0520 23       		.uleb128 0x23
 847 0521 7B010000 		.4byte	.LASF80
 848 0525 07       		.byte	0x7
 849 0526 CA       		.byte	0xca
 850 0527 10050000 		.4byte	0x510
 851 052b 24       		.uleb128 0x24
 852 052c D5000000 		.4byte	0xd5
 853 0530 3B050000 		.4byte	0x53b
 854 0534 25       		.uleb128 0x25
 855 0535 BB020000 		.4byte	0x2bb
 856 0539 02       		.byte	0x2
 857 053a 00       		.byte	0
 858 053b 23       		.uleb128 0x23
 859 053c 71060000 		.4byte	.LASF81
 860 0540 07       		.byte	0x7
 861 0541 D2       		.byte	0xd2
 862 0542 2B050000 		.4byte	0x52b
 863 0546 23       		.uleb128 0x23
 864 0547 CD040000 		.4byte	.LASF82
 865 054b 07       		.byte	0x7
 866 054c DA       		.byte	0xda
 867 054d 10050000 		.4byte	0x510
 868 0551 23       		.uleb128 0x23
 869 0552 E5050000 		.4byte	.LASF83
 870 0556 07       		.byte	0x7
 871 0557 E2       		.byte	0xe2
 872 0558 D5000000 		.4byte	0xd5
 873 055c 23       		.uleb128 0x23
 874 055d D5020000 		.4byte	.LASF84
 875 0561 07       		.byte	0x7
 876 0562 F7       		.byte	0xf7
 877 0563 B4000000 		.4byte	0xb4
 878 0567 27       		.uleb128 0x27
 879 0568 14000000 		.4byte	.LASF85
 880 056c 07       		.byte	0x7
 881 056d 3F01     		.2byte	0x13f
 882 056f E0000000 		.4byte	0xe0
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 31


 883 0573 27       		.uleb128 0x27
 884 0574 85000000 		.4byte	.LASF86
 885 0578 07       		.byte	0x7
 886 0579 5C01     		.2byte	0x15c
 887 057b 10050000 		.4byte	0x510
 888 057f 24       		.uleb128 0x24
 889 0580 CA000000 		.4byte	0xca
 890 0584 8F050000 		.4byte	0x58f
 891 0588 25       		.uleb128 0x25
 892 0589 BB020000 		.4byte	0x2bb
 893 058d 02       		.byte	0x2
 894 058e 00       		.byte	0
 895 058f 27       		.uleb128 0x27
 896 0590 C0000000 		.4byte	.LASF87
 897 0594 07       		.byte	0x7
 898 0595 6701     		.2byte	0x167
 899 0597 7F050000 		.4byte	0x57f
 900 059b 24       		.uleb128 0x24
 901 059c AB050000 		.4byte	0x5ab
 902 05a0 AB050000 		.4byte	0x5ab
 903 05a4 25       		.uleb128 0x25
 904 05a5 BB020000 		.4byte	0x2bb
 905 05a9 00       		.byte	0
 906 05aa 00       		.byte	0
 907 05ab 26       		.uleb128 0x26
 908 05ac 41010000 		.4byte	0x141
 909 05b0 27       		.uleb128 0x27
 910 05b1 2E030000 		.4byte	.LASF88
 911 05b5 07       		.byte	0x7
 912 05b6 CA02     		.2byte	0x2ca
 913 05b8 BC050000 		.4byte	0x5bc
 914 05bc 26       		.uleb128 0x26
 915 05bd 9B050000 		.4byte	0x59b
 916 05c1 24       		.uleb128 0x24
 917 05c2 D1050000 		.4byte	0x5d1
 918 05c6 D1050000 		.4byte	0x5d1
 919 05ca 25       		.uleb128 0x25
 920 05cb BB020000 		.4byte	0x2bb
 921 05cf 00       		.byte	0
 922 05d0 00       		.byte	0
 923 05d1 26       		.uleb128 0x26
 924 05d2 DE010000 		.4byte	0x1de
 925 05d6 27       		.uleb128 0x27
 926 05d7 88010000 		.4byte	.LASF89
 927 05db 07       		.byte	0x7
 928 05dc DD02     		.2byte	0x2dd
 929 05de E2050000 		.4byte	0x5e2
 930 05e2 26       		.uleb128 0x26
 931 05e3 C1050000 		.4byte	0x5c1
 932 05e7 24       		.uleb128 0x24
 933 05e8 71010000 		.4byte	0x171
 934 05ec F7050000 		.4byte	0x5f7
 935 05f0 25       		.uleb128 0x25
 936 05f1 BB020000 		.4byte	0x2bb
 937 05f5 00       		.byte	0
 938 05f6 00       		.byte	0
 939 05f7 27       		.uleb128 0x27
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 32


 940 05f8 9E050000 		.4byte	.LASF90
 941 05fc 07       		.byte	0x7
 942 05fd FB02     		.2byte	0x2fb
 943 05ff E7050000 		.4byte	0x5e7
 944 0603 24       		.uleb128 0x24
 945 0604 28020000 		.4byte	0x228
 946 0608 13060000 		.4byte	0x613
 947 060c 25       		.uleb128 0x25
 948 060d BB020000 		.4byte	0x2bb
 949 0611 00       		.byte	0
 950 0612 00       		.byte	0
 951 0613 27       		.uleb128 0x27
 952 0614 2F040000 		.4byte	.LASF91
 953 0618 07       		.byte	0x7
 954 0619 0403     		.2byte	0x304
 955 061b 03060000 		.4byte	0x603
 956 061f 23       		.uleb128 0x23
 957 0620 20070000 		.4byte	.LASF92
 958 0624 0A       		.byte	0xa
 959 0625 40       		.byte	0x40
 960 0626 B4000000 		.4byte	0xb4
 961 062a 23       		.uleb128 0x23
 962 062b D5010000 		.4byte	.LASF93
 963 062f 0A       		.byte	0xa
 964 0630 47       		.byte	0x47
 965 0631 BF000000 		.4byte	0xbf
 966 0635 23       		.uleb128 0x23
 967 0636 AD050000 		.4byte	.LASF94
 968 063a 0A       		.byte	0xa
 969 063b 4A       		.byte	0x4a
 970 063c B4000000 		.4byte	0xb4
 971 0640 27       		.uleb128 0x27
 972 0641 7C060000 		.4byte	.LASF95
 973 0645 0B       		.byte	0xb
 974 0646 1207     		.2byte	0x712
 975 0648 4C060000 		.4byte	0x64c
 976 064c 28       		.uleb128 0x28
 977 064d 90020000 		.4byte	0x290
 978 0651 24       		.uleb128 0x24
 979 0652 61060000 		.4byte	0x661
 980 0656 61060000 		.4byte	0x661
 981 065a 25       		.uleb128 0x25
 982 065b BB020000 		.4byte	0x2bb
 983 065f FF       		.byte	0xff
 984 0660 00       		.byte	0
 985 0661 26       		.uleb128 0x26
 986 0662 88000000 		.4byte	0x88
 987 0666 27       		.uleb128 0x27
 988 0667 6B070000 		.4byte	.LASF96
 989 066b 02       		.byte	0x2
 990 066c AB01     		.2byte	0x1ab
 991 066e 72060000 		.4byte	0x672
 992 0672 26       		.uleb128 0x26
 993 0673 51060000 		.4byte	0x651
 994 0677 29       		.uleb128 0x29
 995 0678 98000000 		.4byte	.LASF70
 996 067c 98000000 		.4byte	.LASF70
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 33


 997 0680 01       		.byte	0x1
 998 0681 87       		.byte	0x87
 999 0682 2A       		.uleb128 0x2a
 1000 0683 AC000000 		.4byte	.LASF71
 1001 0687 AC000000 		.4byte	.LASF71
 1002 068b 02       		.byte	0x2
 1003 068c EB02     		.2byte	0x2eb
 1004 068e 2A       		.uleb128 0x2a
 1005 068f F2020000 		.4byte	.LASF97
 1006 0693 F2020000 		.4byte	.LASF97
 1007 0697 02       		.byte	0x2
 1008 0698 E901     		.2byte	0x1e9
 1009 069a 2A       		.uleb128 0x2a
 1010 069b 8D050000 		.4byte	.LASF98
 1011 069f 8D050000 		.4byte	.LASF98
 1012 06a3 02       		.byte	0x2
 1013 06a4 CB01     		.2byte	0x1cb
 1014 06a6 00       		.byte	0
 1015              		.section	.debug_abbrev,"",%progbits
 1016              	.Ldebug_abbrev0:
 1017 0000 01       		.uleb128 0x1
 1018 0001 11       		.uleb128 0x11
 1019 0002 01       		.byte	0x1
 1020 0003 25       		.uleb128 0x25
 1021 0004 0E       		.uleb128 0xe
 1022 0005 13       		.uleb128 0x13
 1023 0006 0B       		.uleb128 0xb
 1024 0007 03       		.uleb128 0x3
 1025 0008 0E       		.uleb128 0xe
 1026 0009 1B       		.uleb128 0x1b
 1027 000a 0E       		.uleb128 0xe
 1028 000b 55       		.uleb128 0x55
 1029 000c 17       		.uleb128 0x17
 1030 000d 11       		.uleb128 0x11
 1031 000e 01       		.uleb128 0x1
 1032 000f 10       		.uleb128 0x10
 1033 0010 17       		.uleb128 0x17
 1034 0011 00       		.byte	0
 1035 0012 00       		.byte	0
 1036 0013 02       		.uleb128 0x2
 1037 0014 24       		.uleb128 0x24
 1038 0015 00       		.byte	0
 1039 0016 0B       		.uleb128 0xb
 1040 0017 0B       		.uleb128 0xb
 1041 0018 3E       		.uleb128 0x3e
 1042 0019 0B       		.uleb128 0xb
 1043 001a 03       		.uleb128 0x3
 1044 001b 0E       		.uleb128 0xe
 1045 001c 00       		.byte	0
 1046 001d 00       		.byte	0
 1047 001e 03       		.uleb128 0x3
 1048 001f 16       		.uleb128 0x16
 1049 0020 00       		.byte	0
 1050 0021 03       		.uleb128 0x3
 1051 0022 0E       		.uleb128 0xe
 1052 0023 3A       		.uleb128 0x3a
 1053 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 34


 1054 0025 3B       		.uleb128 0x3b
 1055 0026 0B       		.uleb128 0xb
 1056 0027 49       		.uleb128 0x49
 1057 0028 13       		.uleb128 0x13
 1058 0029 00       		.byte	0
 1059 002a 00       		.byte	0
 1060 002b 04       		.uleb128 0x4
 1061 002c 24       		.uleb128 0x24
 1062 002d 00       		.byte	0
 1063 002e 0B       		.uleb128 0xb
 1064 002f 0B       		.uleb128 0xb
 1065 0030 3E       		.uleb128 0x3e
 1066 0031 0B       		.uleb128 0xb
 1067 0032 03       		.uleb128 0x3
 1068 0033 08       		.uleb128 0x8
 1069 0034 00       		.byte	0
 1070 0035 00       		.byte	0
 1071 0036 05       		.uleb128 0x5
 1072 0037 16       		.uleb128 0x16
 1073 0038 00       		.byte	0
 1074 0039 03       		.uleb128 0x3
 1075 003a 0E       		.uleb128 0xe
 1076 003b 3A       		.uleb128 0x3a
 1077 003c 0B       		.uleb128 0xb
 1078 003d 3B       		.uleb128 0x3b
 1079 003e 05       		.uleb128 0x5
 1080 003f 49       		.uleb128 0x49
 1081 0040 13       		.uleb128 0x13
 1082 0041 00       		.byte	0
 1083 0042 00       		.byte	0
 1084 0043 06       		.uleb128 0x6
 1085 0044 13       		.uleb128 0x13
 1086 0045 01       		.byte	0x1
 1087 0046 0B       		.uleb128 0xb
 1088 0047 0B       		.uleb128 0xb
 1089 0048 3A       		.uleb128 0x3a
 1090 0049 0B       		.uleb128 0xb
 1091 004a 3B       		.uleb128 0x3b
 1092 004b 05       		.uleb128 0x5
 1093 004c 01       		.uleb128 0x1
 1094 004d 13       		.uleb128 0x13
 1095 004e 00       		.byte	0
 1096 004f 00       		.byte	0
 1097 0050 07       		.uleb128 0x7
 1098 0051 0D       		.uleb128 0xd
 1099 0052 00       		.byte	0
 1100 0053 03       		.uleb128 0x3
 1101 0054 0E       		.uleb128 0xe
 1102 0055 3A       		.uleb128 0x3a
 1103 0056 0B       		.uleb128 0xb
 1104 0057 3B       		.uleb128 0x3b
 1105 0058 05       		.uleb128 0x5
 1106 0059 49       		.uleb128 0x49
 1107 005a 13       		.uleb128 0x13
 1108 005b 38       		.uleb128 0x38
 1109 005c 0B       		.uleb128 0xb
 1110 005d 00       		.byte	0
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 35


 1111 005e 00       		.byte	0
 1112 005f 08       		.uleb128 0x8
 1113 0060 04       		.uleb128 0x4
 1114 0061 01       		.byte	0x1
 1115 0062 0B       		.uleb128 0xb
 1116 0063 0B       		.uleb128 0xb
 1117 0064 49       		.uleb128 0x49
 1118 0065 13       		.uleb128 0x13
 1119 0066 3A       		.uleb128 0x3a
 1120 0067 0B       		.uleb128 0xb
 1121 0068 3B       		.uleb128 0x3b
 1122 0069 05       		.uleb128 0x5
 1123 006a 01       		.uleb128 0x1
 1124 006b 13       		.uleb128 0x13
 1125 006c 00       		.byte	0
 1126 006d 00       		.byte	0
 1127 006e 09       		.uleb128 0x9
 1128 006f 28       		.uleb128 0x28
 1129 0070 00       		.byte	0
 1130 0071 03       		.uleb128 0x3
 1131 0072 0E       		.uleb128 0xe
 1132 0073 1C       		.uleb128 0x1c
 1133 0074 0B       		.uleb128 0xb
 1134 0075 00       		.byte	0
 1135 0076 00       		.byte	0
 1136 0077 0A       		.uleb128 0xa
 1137 0078 0D       		.uleb128 0xd
 1138 0079 00       		.byte	0
 1139 007a 03       		.uleb128 0x3
 1140 007b 08       		.uleb128 0x8
 1141 007c 3A       		.uleb128 0x3a
 1142 007d 0B       		.uleb128 0xb
 1143 007e 3B       		.uleb128 0x3b
 1144 007f 05       		.uleb128 0x5
 1145 0080 49       		.uleb128 0x49
 1146 0081 13       		.uleb128 0x13
 1147 0082 38       		.uleb128 0x38
 1148 0083 0B       		.uleb128 0xb
 1149 0084 00       		.byte	0
 1150 0085 00       		.byte	0
 1151 0086 0B       		.uleb128 0xb
 1152 0087 2E       		.uleb128 0x2e
 1153 0088 01       		.byte	0x1
 1154 0089 03       		.uleb128 0x3
 1155 008a 0E       		.uleb128 0xe
 1156 008b 3A       		.uleb128 0x3a
 1157 008c 0B       		.uleb128 0xb
 1158 008d 3B       		.uleb128 0x3b
 1159 008e 05       		.uleb128 0x5
 1160 008f 27       		.uleb128 0x27
 1161 0090 19       		.uleb128 0x19
 1162 0091 20       		.uleb128 0x20
 1163 0092 0B       		.uleb128 0xb
 1164 0093 01       		.uleb128 0x1
 1165 0094 13       		.uleb128 0x13
 1166 0095 00       		.byte	0
 1167 0096 00       		.byte	0
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 36


 1168 0097 0C       		.uleb128 0xc
 1169 0098 05       		.uleb128 0x5
 1170 0099 00       		.byte	0
 1171 009a 03       		.uleb128 0x3
 1172 009b 08       		.uleb128 0x8
 1173 009c 3A       		.uleb128 0x3a
 1174 009d 0B       		.uleb128 0xb
 1175 009e 3B       		.uleb128 0x3b
 1176 009f 05       		.uleb128 0x5
 1177 00a0 49       		.uleb128 0x49
 1178 00a1 13       		.uleb128 0x13
 1179 00a2 00       		.byte	0
 1180 00a3 00       		.byte	0
 1181 00a4 0D       		.uleb128 0xd
 1182 00a5 2E       		.uleb128 0x2e
 1183 00a6 01       		.byte	0x1
 1184 00a7 03       		.uleb128 0x3
 1185 00a8 0E       		.uleb128 0xe
 1186 00a9 3A       		.uleb128 0x3a
 1187 00aa 0B       		.uleb128 0xb
 1188 00ab 3B       		.uleb128 0x3b
 1189 00ac 0B       		.uleb128 0xb
 1190 00ad 27       		.uleb128 0x27
 1191 00ae 19       		.uleb128 0x19
 1192 00af 20       		.uleb128 0x20
 1193 00b0 0B       		.uleb128 0xb
 1194 00b1 01       		.uleb128 0x1
 1195 00b2 13       		.uleb128 0x13
 1196 00b3 00       		.byte	0
 1197 00b4 00       		.byte	0
 1198 00b5 0E       		.uleb128 0xe
 1199 00b6 05       		.uleb128 0x5
 1200 00b7 00       		.byte	0
 1201 00b8 03       		.uleb128 0x3
 1202 00b9 08       		.uleb128 0x8
 1203 00ba 3A       		.uleb128 0x3a
 1204 00bb 0B       		.uleb128 0xb
 1205 00bc 3B       		.uleb128 0x3b
 1206 00bd 0B       		.uleb128 0xb
 1207 00be 49       		.uleb128 0x49
 1208 00bf 13       		.uleb128 0x13
 1209 00c0 00       		.byte	0
 1210 00c1 00       		.byte	0
 1211 00c2 0F       		.uleb128 0xf
 1212 00c3 2E       		.uleb128 0x2e
 1213 00c4 00       		.byte	0
 1214 00c5 03       		.uleb128 0x3
 1215 00c6 0E       		.uleb128 0xe
 1216 00c7 3A       		.uleb128 0x3a
 1217 00c8 0B       		.uleb128 0xb
 1218 00c9 3B       		.uleb128 0x3b
 1219 00ca 05       		.uleb128 0x5
 1220 00cb 27       		.uleb128 0x27
 1221 00cc 19       		.uleb128 0x19
 1222 00cd 20       		.uleb128 0x20
 1223 00ce 0B       		.uleb128 0xb
 1224 00cf 00       		.byte	0
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 37


 1225 00d0 00       		.byte	0
 1226 00d1 10       		.uleb128 0x10
 1227 00d2 2E       		.uleb128 0x2e
 1228 00d3 00       		.byte	0
 1229 00d4 03       		.uleb128 0x3
 1230 00d5 0E       		.uleb128 0xe
 1231 00d6 3A       		.uleb128 0x3a
 1232 00d7 0B       		.uleb128 0xb
 1233 00d8 3B       		.uleb128 0x3b
 1234 00d9 0B       		.uleb128 0xb
 1235 00da 27       		.uleb128 0x27
 1236 00db 19       		.uleb128 0x19
 1237 00dc 49       		.uleb128 0x49
 1238 00dd 13       		.uleb128 0x13
 1239 00de 20       		.uleb128 0x20
 1240 00df 0B       		.uleb128 0xb
 1241 00e0 00       		.byte	0
 1242 00e1 00       		.byte	0
 1243 00e2 11       		.uleb128 0x11
 1244 00e3 2E       		.uleb128 0x2e
 1245 00e4 00       		.byte	0
 1246 00e5 03       		.uleb128 0x3
 1247 00e6 0E       		.uleb128 0xe
 1248 00e7 3A       		.uleb128 0x3a
 1249 00e8 0B       		.uleb128 0xb
 1250 00e9 3B       		.uleb128 0x3b
 1251 00ea 05       		.uleb128 0x5
 1252 00eb 27       		.uleb128 0x27
 1253 00ec 19       		.uleb128 0x19
 1254 00ed 49       		.uleb128 0x49
 1255 00ee 13       		.uleb128 0x13
 1256 00ef 20       		.uleb128 0x20
 1257 00f0 0B       		.uleb128 0xb
 1258 00f1 00       		.byte	0
 1259 00f2 00       		.byte	0
 1260 00f3 12       		.uleb128 0x12
 1261 00f4 2E       		.uleb128 0x2e
 1262 00f5 00       		.byte	0
 1263 00f6 03       		.uleb128 0x3
 1264 00f7 0E       		.uleb128 0xe
 1265 00f8 3A       		.uleb128 0x3a
 1266 00f9 0B       		.uleb128 0xb
 1267 00fa 3B       		.uleb128 0x3b
 1268 00fb 0B       		.uleb128 0xb
 1269 00fc 27       		.uleb128 0x27
 1270 00fd 19       		.uleb128 0x19
 1271 00fe 20       		.uleb128 0x20
 1272 00ff 0B       		.uleb128 0xb
 1273 0100 00       		.byte	0
 1274 0101 00       		.byte	0
 1275 0102 13       		.uleb128 0x13
 1276 0103 2E       		.uleb128 0x2e
 1277 0104 01       		.byte	0x1
 1278 0105 03       		.uleb128 0x3
 1279 0106 0E       		.uleb128 0xe
 1280 0107 3A       		.uleb128 0x3a
 1281 0108 0B       		.uleb128 0xb
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 38


 1282 0109 3B       		.uleb128 0x3b
 1283 010a 0B       		.uleb128 0xb
 1284 010b 27       		.uleb128 0x27
 1285 010c 19       		.uleb128 0x19
 1286 010d 11       		.uleb128 0x11
 1287 010e 01       		.uleb128 0x1
 1288 010f 12       		.uleb128 0x12
 1289 0110 06       		.uleb128 0x6
 1290 0111 40       		.uleb128 0x40
 1291 0112 18       		.uleb128 0x18
 1292 0113 9742     		.uleb128 0x2117
 1293 0115 19       		.uleb128 0x19
 1294 0116 01       		.uleb128 0x1
 1295 0117 13       		.uleb128 0x13
 1296 0118 00       		.byte	0
 1297 0119 00       		.byte	0
 1298 011a 14       		.uleb128 0x14
 1299 011b 34       		.uleb128 0x34
 1300 011c 00       		.byte	0
 1301 011d 03       		.uleb128 0x3
 1302 011e 0E       		.uleb128 0xe
 1303 011f 3A       		.uleb128 0x3a
 1304 0120 0B       		.uleb128 0xb
 1305 0121 3B       		.uleb128 0x3b
 1306 0122 0B       		.uleb128 0xb
 1307 0123 49       		.uleb128 0x49
 1308 0124 13       		.uleb128 0x13
 1309 0125 02       		.uleb128 0x2
 1310 0126 17       		.uleb128 0x17
 1311 0127 00       		.byte	0
 1312 0128 00       		.byte	0
 1313 0129 15       		.uleb128 0x15
 1314 012a 0B       		.uleb128 0xb
 1315 012b 01       		.byte	0x1
 1316 012c 11       		.uleb128 0x11
 1317 012d 01       		.uleb128 0x1
 1318 012e 12       		.uleb128 0x12
 1319 012f 06       		.uleb128 0x6
 1320 0130 01       		.uleb128 0x1
 1321 0131 13       		.uleb128 0x13
 1322 0132 00       		.byte	0
 1323 0133 00       		.byte	0
 1324 0134 16       		.uleb128 0x16
 1325 0135 2E       		.uleb128 0x2e
 1326 0136 01       		.byte	0x1
 1327 0137 3F       		.uleb128 0x3f
 1328 0138 19       		.uleb128 0x19
 1329 0139 03       		.uleb128 0x3
 1330 013a 0E       		.uleb128 0xe
 1331 013b 3A       		.uleb128 0x3a
 1332 013c 0B       		.uleb128 0xb
 1333 013d 3B       		.uleb128 0x3b
 1334 013e 0B       		.uleb128 0xb
 1335 013f 49       		.uleb128 0x49
 1336 0140 13       		.uleb128 0x13
 1337 0141 3C       		.uleb128 0x3c
 1338 0142 19       		.uleb128 0x19
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 39


 1339 0143 01       		.uleb128 0x1
 1340 0144 13       		.uleb128 0x13
 1341 0145 00       		.byte	0
 1342 0146 00       		.byte	0
 1343 0147 17       		.uleb128 0x17
 1344 0148 18       		.uleb128 0x18
 1345 0149 00       		.byte	0
 1346 014a 00       		.byte	0
 1347 014b 00       		.byte	0
 1348 014c 18       		.uleb128 0x18
 1349 014d 2E       		.uleb128 0x2e
 1350 014e 01       		.byte	0x1
 1351 014f 3F       		.uleb128 0x3f
 1352 0150 19       		.uleb128 0x19
 1353 0151 03       		.uleb128 0x3
 1354 0152 0E       		.uleb128 0xe
 1355 0153 3A       		.uleb128 0x3a
 1356 0154 0B       		.uleb128 0xb
 1357 0155 3B       		.uleb128 0x3b
 1358 0156 05       		.uleb128 0x5
 1359 0157 49       		.uleb128 0x49
 1360 0158 13       		.uleb128 0x13
 1361 0159 3C       		.uleb128 0x3c
 1362 015a 19       		.uleb128 0x19
 1363 015b 01       		.uleb128 0x1
 1364 015c 13       		.uleb128 0x13
 1365 015d 00       		.byte	0
 1366 015e 00       		.byte	0
 1367 015f 19       		.uleb128 0x19
 1368 0160 1D       		.uleb128 0x1d
 1369 0161 00       		.byte	0
 1370 0162 31       		.uleb128 0x31
 1371 0163 13       		.uleb128 0x13
 1372 0164 11       		.uleb128 0x11
 1373 0165 01       		.uleb128 0x1
 1374 0166 12       		.uleb128 0x12
 1375 0167 06       		.uleb128 0x6
 1376 0168 58       		.uleb128 0x58
 1377 0169 0B       		.uleb128 0xb
 1378 016a 59       		.uleb128 0x59
 1379 016b 0B       		.uleb128 0xb
 1380 016c 00       		.byte	0
 1381 016d 00       		.byte	0
 1382 016e 1A       		.uleb128 0x1a
 1383 016f 1D       		.uleb128 0x1d
 1384 0170 01       		.byte	0x1
 1385 0171 31       		.uleb128 0x31
 1386 0172 13       		.uleb128 0x13
 1387 0173 11       		.uleb128 0x11
 1388 0174 01       		.uleb128 0x1
 1389 0175 12       		.uleb128 0x12
 1390 0176 06       		.uleb128 0x6
 1391 0177 58       		.uleb128 0x58
 1392 0178 0B       		.uleb128 0xb
 1393 0179 59       		.uleb128 0x59
 1394 017a 0B       		.uleb128 0xb
 1395 017b 01       		.uleb128 0x1
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 40


 1396 017c 13       		.uleb128 0x13
 1397 017d 00       		.byte	0
 1398 017e 00       		.byte	0
 1399 017f 1B       		.uleb128 0x1b
 1400 0180 05       		.uleb128 0x5
 1401 0181 00       		.byte	0
 1402 0182 31       		.uleb128 0x31
 1403 0183 13       		.uleb128 0x13
 1404 0184 02       		.uleb128 0x2
 1405 0185 17       		.uleb128 0x17
 1406 0186 00       		.byte	0
 1407 0187 00       		.byte	0
 1408 0188 1C       		.uleb128 0x1c
 1409 0189 898201   		.uleb128 0x4109
 1410 018c 01       		.byte	0x1
 1411 018d 11       		.uleb128 0x11
 1412 018e 01       		.uleb128 0x1
 1413 018f 31       		.uleb128 0x31
 1414 0190 13       		.uleb128 0x13
 1415 0191 01       		.uleb128 0x1
 1416 0192 13       		.uleb128 0x13
 1417 0193 00       		.byte	0
 1418 0194 00       		.byte	0
 1419 0195 1D       		.uleb128 0x1d
 1420 0196 8A8201   		.uleb128 0x410a
 1421 0199 00       		.byte	0
 1422 019a 02       		.uleb128 0x2
 1423 019b 18       		.uleb128 0x18
 1424 019c 9142     		.uleb128 0x2111
 1425 019e 18       		.uleb128 0x18
 1426 019f 00       		.byte	0
 1427 01a0 00       		.byte	0
 1428 01a1 1E       		.uleb128 0x1e
 1429 01a2 898201   		.uleb128 0x4109
 1430 01a5 01       		.byte	0x1
 1431 01a6 11       		.uleb128 0x11
 1432 01a7 01       		.uleb128 0x1
 1433 01a8 31       		.uleb128 0x31
 1434 01a9 13       		.uleb128 0x13
 1435 01aa 00       		.byte	0
 1436 01ab 00       		.byte	0
 1437 01ac 1F       		.uleb128 0x1f
 1438 01ad 05       		.uleb128 0x5
 1439 01ae 00       		.byte	0
 1440 01af 31       		.uleb128 0x31
 1441 01b0 13       		.uleb128 0x13
 1442 01b1 02       		.uleb128 0x2
 1443 01b2 18       		.uleb128 0x18
 1444 01b3 00       		.byte	0
 1445 01b4 00       		.byte	0
 1446 01b5 20       		.uleb128 0x20
 1447 01b6 898201   		.uleb128 0x4109
 1448 01b9 00       		.byte	0
 1449 01ba 11       		.uleb128 0x11
 1450 01bb 01       		.uleb128 0x1
 1451 01bc 31       		.uleb128 0x31
 1452 01bd 13       		.uleb128 0x13
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 41


 1453 01be 00       		.byte	0
 1454 01bf 00       		.byte	0
 1455 01c0 21       		.uleb128 0x21
 1456 01c1 2E       		.uleb128 0x2e
 1457 01c2 01       		.byte	0x1
 1458 01c3 3F       		.uleb128 0x3f
 1459 01c4 19       		.uleb128 0x19
 1460 01c5 03       		.uleb128 0x3
 1461 01c6 0E       		.uleb128 0xe
 1462 01c7 3A       		.uleb128 0x3a
 1463 01c8 0B       		.uleb128 0xb
 1464 01c9 3B       		.uleb128 0x3b
 1465 01ca 0B       		.uleb128 0xb
 1466 01cb 27       		.uleb128 0x27
 1467 01cc 19       		.uleb128 0x19
 1468 01cd 11       		.uleb128 0x11
 1469 01ce 01       		.uleb128 0x1
 1470 01cf 12       		.uleb128 0x12
 1471 01d0 06       		.uleb128 0x6
 1472 01d1 40       		.uleb128 0x40
 1473 01d2 18       		.uleb128 0x18
 1474 01d3 9742     		.uleb128 0x2117
 1475 01d5 19       		.uleb128 0x19
 1476 01d6 01       		.uleb128 0x1
 1477 01d7 13       		.uleb128 0x13
 1478 01d8 00       		.byte	0
 1479 01d9 00       		.byte	0
 1480 01da 22       		.uleb128 0x22
 1481 01db 34       		.uleb128 0x34
 1482 01dc 00       		.byte	0
 1483 01dd 03       		.uleb128 0x3
 1484 01de 0E       		.uleb128 0xe
 1485 01df 3A       		.uleb128 0x3a
 1486 01e0 0B       		.uleb128 0xb
 1487 01e1 3B       		.uleb128 0x3b
 1488 01e2 0B       		.uleb128 0xb
 1489 01e3 49       		.uleb128 0x49
 1490 01e4 13       		.uleb128 0x13
 1491 01e5 00       		.byte	0
 1492 01e6 00       		.byte	0
 1493 01e7 23       		.uleb128 0x23
 1494 01e8 34       		.uleb128 0x34
 1495 01e9 00       		.byte	0
 1496 01ea 03       		.uleb128 0x3
 1497 01eb 0E       		.uleb128 0xe
 1498 01ec 3A       		.uleb128 0x3a
 1499 01ed 0B       		.uleb128 0xb
 1500 01ee 3B       		.uleb128 0x3b
 1501 01ef 0B       		.uleb128 0xb
 1502 01f0 49       		.uleb128 0x49
 1503 01f1 13       		.uleb128 0x13
 1504 01f2 3F       		.uleb128 0x3f
 1505 01f3 19       		.uleb128 0x19
 1506 01f4 3C       		.uleb128 0x3c
 1507 01f5 19       		.uleb128 0x19
 1508 01f6 00       		.byte	0
 1509 01f7 00       		.byte	0
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 42


 1510 01f8 24       		.uleb128 0x24
 1511 01f9 01       		.uleb128 0x1
 1512 01fa 01       		.byte	0x1
 1513 01fb 49       		.uleb128 0x49
 1514 01fc 13       		.uleb128 0x13
 1515 01fd 01       		.uleb128 0x1
 1516 01fe 13       		.uleb128 0x13
 1517 01ff 00       		.byte	0
 1518 0200 00       		.byte	0
 1519 0201 25       		.uleb128 0x25
 1520 0202 21       		.uleb128 0x21
 1521 0203 00       		.byte	0
 1522 0204 49       		.uleb128 0x49
 1523 0205 13       		.uleb128 0x13
 1524 0206 2F       		.uleb128 0x2f
 1525 0207 0B       		.uleb128 0xb
 1526 0208 00       		.byte	0
 1527 0209 00       		.byte	0
 1528 020a 26       		.uleb128 0x26
 1529 020b 26       		.uleb128 0x26
 1530 020c 00       		.byte	0
 1531 020d 49       		.uleb128 0x49
 1532 020e 13       		.uleb128 0x13
 1533 020f 00       		.byte	0
 1534 0210 00       		.byte	0
 1535 0211 27       		.uleb128 0x27
 1536 0212 34       		.uleb128 0x34
 1537 0213 00       		.byte	0
 1538 0214 03       		.uleb128 0x3
 1539 0215 0E       		.uleb128 0xe
 1540 0216 3A       		.uleb128 0x3a
 1541 0217 0B       		.uleb128 0xb
 1542 0218 3B       		.uleb128 0x3b
 1543 0219 05       		.uleb128 0x5
 1544 021a 49       		.uleb128 0x49
 1545 021b 13       		.uleb128 0x13
 1546 021c 3F       		.uleb128 0x3f
 1547 021d 19       		.uleb128 0x19
 1548 021e 3C       		.uleb128 0x3c
 1549 021f 19       		.uleb128 0x19
 1550 0220 00       		.byte	0
 1551 0221 00       		.byte	0
 1552 0222 28       		.uleb128 0x28
 1553 0223 35       		.uleb128 0x35
 1554 0224 00       		.byte	0
 1555 0225 49       		.uleb128 0x49
 1556 0226 13       		.uleb128 0x13
 1557 0227 00       		.byte	0
 1558 0228 00       		.byte	0
 1559 0229 29       		.uleb128 0x29
 1560 022a 2E       		.uleb128 0x2e
 1561 022b 00       		.byte	0
 1562 022c 3F       		.uleb128 0x3f
 1563 022d 19       		.uleb128 0x19
 1564 022e 3C       		.uleb128 0x3c
 1565 022f 19       		.uleb128 0x19
 1566 0230 6E       		.uleb128 0x6e
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 43


 1567 0231 0E       		.uleb128 0xe
 1568 0232 03       		.uleb128 0x3
 1569 0233 0E       		.uleb128 0xe
 1570 0234 3A       		.uleb128 0x3a
 1571 0235 0B       		.uleb128 0xb
 1572 0236 3B       		.uleb128 0x3b
 1573 0237 0B       		.uleb128 0xb
 1574 0238 00       		.byte	0
 1575 0239 00       		.byte	0
 1576 023a 2A       		.uleb128 0x2a
 1577 023b 2E       		.uleb128 0x2e
 1578 023c 00       		.byte	0
 1579 023d 3F       		.uleb128 0x3f
 1580 023e 19       		.uleb128 0x19
 1581 023f 3C       		.uleb128 0x3c
 1582 0240 19       		.uleb128 0x19
 1583 0241 6E       		.uleb128 0x6e
 1584 0242 0E       		.uleb128 0xe
 1585 0243 03       		.uleb128 0x3
 1586 0244 0E       		.uleb128 0xe
 1587 0245 3A       		.uleb128 0x3a
 1588 0246 0B       		.uleb128 0xb
 1589 0247 3B       		.uleb128 0x3b
 1590 0248 05       		.uleb128 0x5
 1591 0249 00       		.byte	0
 1592 024a 00       		.byte	0
 1593 024b 00       		.byte	0
 1594              		.section	.debug_loc,"",%progbits
 1595              	.Ldebug_loc0:
 1596              	.LLST0:
 1597 0000 08000000 		.4byte	.LVL1
 1598 0004 20000000 		.4byte	.LVL2
 1599 0008 0100     		.2byte	0x1
 1600 000a 50       		.byte	0x50
 1601 000b 20000000 		.4byte	.LVL2
 1602 000f 38000000 		.4byte	.LVL5
 1603 0013 0100     		.2byte	0x1
 1604 0015 54       		.byte	0x54
 1605 0016 3E000000 		.4byte	.LVL6
 1606 001a 54000000 		.4byte	.LFE140
 1607 001e 0100     		.2byte	0x1
 1608 0020 50       		.byte	0x50
 1609 0021 00000000 		.4byte	0
 1610 0025 00000000 		.4byte	0
 1611              	.LLST1:
 1612 0029 34000000 		.4byte	.LVL4
 1613 002d 38000000 		.4byte	.LVL5
 1614 0031 0100     		.2byte	0x1
 1615 0033 54       		.byte	0x54
 1616 0034 00000000 		.4byte	0
 1617 0038 00000000 		.4byte	0
 1618              	.LLST2:
 1619 003c 06000000 		.4byte	.LVL7
 1620 0040 43000000 		.4byte	.LVL8-1
 1621 0044 0100     		.2byte	0x1
 1622 0046 50       		.byte	0x50
 1623 0047 46000000 		.4byte	.LVL9
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 44


 1624 004b 68000000 		.4byte	.LFE141
 1625 004f 0100     		.2byte	0x1
 1626 0051 50       		.byte	0x50
 1627 0052 00000000 		.4byte	0
 1628 0056 00000000 		.4byte	0
 1629              	.LLST3:
 1630 005a 46000000 		.4byte	.LVL9
 1631 005e 4A000000 		.4byte	.LVL10
 1632 0062 0100     		.2byte	0x1
 1633 0064 53       		.byte	0x53
 1634 0065 00000000 		.4byte	0
 1635 0069 00000000 		.4byte	0
 1636              		.section	.debug_aranges,"",%progbits
 1637 0000 2C000000 		.4byte	0x2c
 1638 0004 0200     		.2byte	0x2
 1639 0006 00000000 		.4byte	.Ldebug_info0
 1640 000a 04       		.byte	0x4
 1641 000b 00       		.byte	0
 1642 000c 0000     		.2byte	0
 1643 000e 0000     		.2byte	0
 1644 0010 00000000 		.4byte	.LFB140
 1645 0014 54000000 		.4byte	.LFE140-.LFB140
 1646 0018 00000000 		.4byte	.LFB141
 1647 001c 68000000 		.4byte	.LFE141-.LFB141
 1648 0020 00000000 		.4byte	.LFB142
 1649 0024 14000000 		.4byte	.LFE142-.LFB142
 1650 0028 00000000 		.4byte	0
 1651 002c 00000000 		.4byte	0
 1652              		.section	.debug_ranges,"",%progbits
 1653              	.Ldebug_ranges0:
 1654 0000 00000000 		.4byte	.LFB140
 1655 0004 54000000 		.4byte	.LFE140
 1656 0008 00000000 		.4byte	.LFB141
 1657 000c 68000000 		.4byte	.LFE141
 1658 0010 00000000 		.4byte	.LFB142
 1659 0014 14000000 		.4byte	.LFE142
 1660 0018 00000000 		.4byte	0
 1661 001c 00000000 		.4byte	0
 1662              		.section	.debug_line,"",%progbits
 1663              	.Ldebug_line0:
 1664 0000 BF020000 		.section	.debug_str,"MS",%progbits,1
 1664      02003C02 
 1664      00000201 
 1664      FB0E0D00 
 1664      01010101 
 1665              	.LASF36:
 1666 0000 6B696E64 		.ascii	"kind\000"
 1666      00
 1667              	.LASF43:
 1668 0005 4B65726E 		.ascii	"Kernel_Context\000"
 1668      656C5F43 
 1668      6F6E7465 
 1668      787400
 1669              	.LASF85:
 1670 0014 45455F72 		.ascii	"EE_rq_bitmask\000"
 1670      715F6269 
 1670      746D6173 
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 45


 1670      6B00
 1671              	.LASF16:
 1672 0022 45455F55 		.ascii	"EE_UREG\000"
 1672      52454700 
 1673              	.LASF63:
 1674 002a 45455F68 		.ascii	"EE_hal_endcycle_ready\000"
 1674      616C5F65 
 1674      6E646379 
 1674      636C655F 
 1674      72656164 
 1675              	.LASF73:
 1676 0040 72716669 		.ascii	"rqfirst\000"
 1676      72737400 
 1677              	.LASF64:
 1678 0048 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1678      6F5F6361 
 1678      6C6C5F50 
 1678      72655461 
 1678      736B486F 
 1679              	.LASF25:
 1680 005f 7469636B 		.ascii	"ticksperbase\000"
 1680      73706572 
 1680      62617365 
 1680      00
 1681              	.LASF69:
 1682 006c 45455F49 		.ascii	"EE_IRQ_release_all_items\000"
 1682      52515F72 
 1682      656C6561 
 1682      73655F61 
 1682      6C6C5F69 
 1683              	.LASF86:
 1684 0085 45455F74 		.ascii	"EE_th_event_active\000"
 1684      685F6576 
 1684      656E745F 
 1684      61637469 
 1684      766500
 1685              	.LASF70:
 1686 0098 70727654 		.ascii	"prvTraceStoreEvent1\000"
 1686      72616365 
 1686      53746F72 
 1686      65457665 
 1686      6E743100 
 1687              	.LASF71:
 1688 00ac 70727654 		.ascii	"prvTraceStoreEvent2\000"
 1688      72616365 
 1688      53746F72 
 1688      65457665 
 1688      6E743200 
 1689              	.LASF87:
 1690 00c0 45455F74 		.ascii	"EE_th_waswaiting\000"
 1690      685F7761 
 1690      73776169 
 1690      74696E67 
 1690      00
 1691              	.LASF2:
 1692 00d1 73686F72 		.ascii	"short int\000"
 1692      7420696E 
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 46


 1692      7400
 1693              	.LASF46:
 1694 00db 4572726F 		.ascii	"ErrorHook_Context\000"
 1694      72486F6F 
 1694      6B5F436F 
 1694      6E746578 
 1694      7400
 1695              	.LASF40:
 1696 00ed 64656C74 		.ascii	"delta\000"
 1696      6100
 1697              	.LASF35:
 1698 00f3 73706563 		.ascii	"spec_id\000"
 1698      5F696400 
 1699              	.LASF17:
 1700 00fb 45455F46 		.ascii	"EE_FREG\000"
 1700      52454700 
 1701              	.LASF54:
 1702 0103 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1702      59504543 
 1702      4F4E5445 
 1702      585400
 1703              	.LASF34:
 1704 0112 436F756E 		.ascii	"CounterObjectKindType\000"
 1704      7465724F 
 1704      626A6563 
 1704      744B696E 
 1704      64547970 
 1705              	.LASF15:
 1706 0128 45455F55 		.ascii	"EE_UINT32\000"
 1706      494E5433 
 1706      3200
 1707              	.LASF75:
 1708 0132 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1708      52515F65 
 1708      6E645F70 
 1708      6F73745F 
 1708      73747562 
 1709              	.LASF78:
 1710 0147 45455F74 		.ascii	"EE_th_ready_prio\000"
 1710      685F7265 
 1710      6164795F 
 1710      7072696F 
 1710      00
 1711              	.LASF45:
 1712 0158 49535232 		.ascii	"ISR2_Context\000"
 1712      5F436F6E 
 1712      74657874 
 1712      00
 1713              	.LASF19:
 1714 0165 45455F54 		.ascii	"EE_TID\000"
 1714      494400
 1715              	.LASF26:
 1716 016c 6D696E63 		.ascii	"mincycle\000"
 1716      79636C65 
 1716      00
 1717              	.LASF28:
 1718 0175 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 47


 1718      6500
 1719              	.LASF80:
 1720 017b 45455F74 		.ascii	"EE_th_status\000"
 1720      685F7374 
 1720      61747573 
 1720      00
 1721              	.LASF89:
 1722 0188 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1722      6F5F636F 
 1722      756E7465 
 1722      725F6F62 
 1722      6A656374 
 1723              	.LASF33:
 1724 01a1 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1724      6F5F636F 
 1724      756E7465 
 1724      725F6F62 
 1724      6A656374 
 1725              	.LASF76:
 1726 01c0 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1726      52515F6E 
 1726      65737469 
 1726      6E675F6C 
 1726      6576656C 
 1727              	.LASF93:
 1728 01d5 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1728      6F5F4952 
 1728      515F7375 
 1728      7370656E 
 1728      645F7374 
 1729              	.LASF57:
 1730 01ee 666C6F61 		.ascii	"float\000"
 1730      7400
 1731              	.LASF53:
 1732 01f4 49646C65 		.ascii	"Idle_Context\000"
 1732      5F436F6E 
 1732      74657874 
 1732      00
 1733              	.LASF62:
 1734 0201 45455F68 		.ascii	"EE_hal_endcycle_stacked\000"
 1734      616C5F65 
 1734      6E646379 
 1734      636C655F 
 1734      73746163 
 1735              	.LASF8:
 1736 0219 6C6F6E67 		.ascii	"long long int\000"
 1736      206C6F6E 
 1736      6720696E 
 1736      7400
 1737              	.LASF22:
 1738 0227 436F756E 		.ascii	"CounterObjectType\000"
 1738      7465724F 
 1738      626A6563 
 1738      74547970 
 1738      6500
 1739              	.LASF20:
 1740 0239 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 48


 1740      5950455F 
 1740      52515F4D 
 1740      41534B00 
 1741              	.LASF32:
 1742 0249 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1742      43484544 
 1742      554C4554 
 1742      41424C45 
 1742      00
 1743              	.LASF12:
 1744 025a 45455F49 		.ascii	"EE_INT8\000"
 1744      4E543800 
 1745              	.LASF4:
 1746 0262 6C6F6E67 		.ascii	"long int\000"
 1746      20696E74 
 1746      00
 1747              	.LASF24:
 1748 026b 6D617861 		.ascii	"maxallowedvalue\000"
 1748      6C6C6F77 
 1748      65647661 
 1748      6C756500 
 1749              	.LASF42:
 1750 027b 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1750      6F5F636F 
 1750      756E7465 
 1750      725F6F62 
 1750      6A656374 
 1751              	.LASF27:
 1752 0299 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1752      6F5F636F 
 1752      756E7465 
 1752      725F524F 
 1752      4D5F7479 
 1753              	.LASF61:
 1754 02b0 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1754      735F7365 
 1754      745F6578 
 1754      65637574 
 1754      696F6E5F 
 1755              	.LASF21:
 1756 02cc 5469636B 		.ascii	"TickType\000"
 1756      54797065 
 1756      00
 1757              	.LASF84:
 1758 02d5 45455F73 		.ascii	"EE_sys_ceiling\000"
 1758      79735F63 
 1758      65696C69 
 1758      6E6700
 1759              	.LASF1:
 1760 02e4 756E7369 		.ascii	"unsigned char\000"
 1760      676E6564 
 1760      20636861 
 1760      7200
 1761              	.LASF97:
 1762 02f2 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1762      71327374 
 1762      6B5F6578 
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 49


 1762      6368616E 
 1762      676500
 1763              	.LASF68:
 1764 0305 45455F6F 		.ascii	"EE_oo_check_disableint_error\000"
 1764      6F5F6368 
 1764      65636B5F 
 1764      64697361 
 1764      626C6569 
 1765              	.LASF11:
 1766 0322 6C6F6E67 		.ascii	"long double\000"
 1766      20646F75 
 1766      626C6500 
 1767              	.LASF88:
 1768 032e 45455F63 		.ascii	"EE_counter_ROM\000"
 1768      6F756E74 
 1768      65725F52 
 1768      4F4D00
 1769              	.LASF100:
 1770 033d 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c\000"
 1770      72617465 
 1770      645F536F 
 1770      75726365 
 1770      5C50536F 
 1771              	.LASF37:
 1772 036c 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1772      6F5F636F 
 1772      756E7465 
 1772      725F6F62 
 1772      6A656374 
 1773              	.LASF101:
 1774 038a 433A5C55 		.ascii	"C:\\Users\\robom\\OneDrive\\University\\Darmstadt\\"
 1774      73657273 
 1774      5C726F62 
 1774      6F6D5C4F 
 1774      6E654472 
 1775 03b7 41647661 		.ascii	"Advanced Microcontroller Systems and Embedded Opera"
 1775      6E636564 
 1775      204D6963 
 1775      726F636F 
 1775      6E74726F 
 1776 03ea 74696E67 		.ascii	"ting systems\\Embedded Operating Systems\\Workbook\\"
 1776      20737973 
 1776      74656D73 
 1776      5C456D62 
 1776      65646465 
 1777 041b 6D70335F 		.ascii	"mp3_player_wb.cydsn\000"
 1777      706C6179 
 1777      65725F77 
 1777      622E6379 
 1777      64736E00 
 1778              	.LASF91:
 1779 042f 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1779      6F5F636F 
 1779      756E7465 
 1779      725F6F62 
 1779      6A656374 
 1780              	.LASF0:
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 50


 1781 0448 7369676E 		.ascii	"signed char\000"
 1781      65642063 
 1781      68617200 
 1782              	.LASF55:
 1783 0454 696E7433 		.ascii	"int32_t\000"
 1783      325F7400 
 1784              	.LASF9:
 1785 045c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1785      206C6F6E 
 1785      6720756E 
 1785      7369676E 
 1785      65642069 
 1786              	.LASF72:
 1787 0473 746E6578 		.ascii	"tnext\000"
 1787      7400
 1788              	.LASF56:
 1789 0479 75696E74 		.ascii	"uint32_t\000"
 1789      33325F74 
 1789      00
 1790              	.LASF30:
 1791 0482 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1791      6F5F636F 
 1791      756E7465 
 1791      725F5241 
 1791      4D5F7479 
 1792              	.LASF67:
 1793 0499 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1793      746B5F71 
 1793      75657279 
 1793      66697273 
 1793      7400
 1794              	.LASF10:
 1795 04ab 756E7369 		.ascii	"unsigned int\000"
 1795      676E6564 
 1795      20696E74 
 1795      00
 1796              	.LASF102:
 1797 04b8 45455F49 		.ascii	"EE_IRQ_run_next_task\000"
 1797      52515F72 
 1797      756E5F6E 
 1797      6578745F 
 1797      7461736B 
 1798              	.LASF82:
 1799 04cd 45455F74 		.ascii	"EE_th_rnact\000"
 1799      685F726E 
 1799      61637400 
 1800              	.LASF77:
 1801 04d9 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1801      74645F65 
 1801      6E646379 
 1801      636C655F 
 1801      6E657874 
 1802              	.LASF14:
 1803 04f2 45455F49 		.ascii	"EE_INT32\000"
 1803      4E543332 
 1803      00
 1804              	.LASF65:
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 51


 1805 04fb 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1805      6F5F6361 
 1805      6C6C5F50 
 1805      6F737454 
 1805      61736B48 
 1806              	.LASF44:
 1807 0513 5441534B 		.ascii	"TASK_Context\000"
 1807      5F436F6E 
 1807      74657874 
 1807      00
 1808              	.LASF3:
 1809 0520 73686F72 		.ascii	"short unsigned int\000"
 1809      7420756E 
 1809      7369676E 
 1809      65642069 
 1809      6E7400
 1810              	.LASF51:
 1811 0533 53687574 		.ascii	"ShutdownHook_Context\000"
 1811      646F776E 
 1811      486F6F6B 
 1811      5F436F6E 
 1811      74657874 
 1812              	.LASF59:
 1813 0548 63686172 		.ascii	"char\000"
 1813      00
 1814              	.LASF13:
 1815 054d 45455F55 		.ascii	"EE_UINT16\000"
 1815      494E5431 
 1815      3600
 1816              	.LASF52:
 1817 0557 416C6172 		.ascii	"AlarmCallback_Context\000"
 1817      6D43616C 
 1817      6C626163 
 1817      6B5F436F 
 1817      6E746578 
 1818              	.LASF66:
 1819 056d 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1819      5254495F 
 1819      7365745F 
 1819      74685F65 
 1819      715F6469 
 1820              	.LASF98:
 1821 058d 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1821      715F7175 
 1821      65727966 
 1821      69727374 
 1821      00
 1822              	.LASF90:
 1823 059e 45455F63 		.ascii	"EE_counter_RAM\000"
 1823      6F756E74 
 1823      65725F52 
 1823      414D00
 1824              	.LASF94:
 1825 05ad 45455F41 		.ascii	"EE_ApplicationMode\000"
 1825      70706C69 
 1825      63617469 
 1825      6F6E4D6F 
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 52


 1825      646500
 1826              	.LASF7:
 1827 05c0 6C6F6E67 		.ascii	"long unsigned int\000"
 1827      20756E73 
 1827      69676E65 
 1827      6420696E 
 1827      7400
 1828              	.LASF58:
 1829 05d2 646F7562 		.ascii	"double\000"
 1829      6C6500
 1830              	.LASF18:
 1831 05d9 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1831      59504542 
 1831      4F4F4C00 
 1832              	.LASF83:
 1833 05e5 45455F73 		.ascii	"EE_stkfirst\000"
 1833      746B6669 
 1833      72737400 
 1834              	.LASF6:
 1835 05f1 5F5F7569 		.ascii	"__uint32_t\000"
 1835      6E743332 
 1835      5F7400
 1836              	.LASF47:
 1837 05fc 50726F74 		.ascii	"ProtectionHook_Context\000"
 1837      65637469 
 1837      6F6E486F 
 1837      6F6B5F43 
 1837      6F6E7465 
 1838              	.LASF5:
 1839 0613 5F5F696E 		.ascii	"__int32_t\000"
 1839      7433325F 
 1839      7400
 1840              	.LASF31:
 1841 061d 45455F41 		.ascii	"EE_ALARM\000"
 1841      4C41524D 
 1841      00
 1842              	.LASF49:
 1843 0626 506F7374 		.ascii	"PostTaskHook_Context\000"
 1843      5461736B 
 1843      486F6F6B 
 1843      5F436F6E 
 1843      74657874 
 1844              	.LASF38:
 1845 063b 75736564 		.ascii	"used\000"
 1845      00
 1846              	.LASF60:
 1847 0640 73697A65 		.ascii	"sizetype\000"
 1847      74797065 
 1847      00
 1848              	.LASF23:
 1849 0649 436F756E 		.ascii	"CounterType\000"
 1849      74657254 
 1849      79706500 
 1850              	.LASF103:
 1851 0655 63757272 		.ascii	"current\000"
 1851      656E7400 
 1852              	.LASF79:
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 53


 1853 065d 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1853      685F6469 
 1853      73706174 
 1853      63685F70 
 1853      72696F00 
 1854              	.LASF81:
 1855 0671 45455F74 		.ascii	"EE_th_next\000"
 1855      685F6E65 
 1855      787400
 1856              	.LASF95:
 1857 067c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1857      52784275 
 1857      66666572 
 1857      00
 1858              	.LASF99:
 1859 0689 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1859      43313120 
 1859      352E342E 
 1859      31203230 
 1859      31363036 
 1860 06bc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1860      20726576 
 1860      6973696F 
 1860      6E203233 
 1860      37373135 
 1861 06ef 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1861      66756E63 
 1861      74696F6E 
 1861      2D736563 
 1861      74696F6E 
 1862              	.LASF39:
 1863 0717 636E7463 		.ascii	"cntcycle\000"
 1863      79636C65 
 1863      00
 1864              	.LASF92:
 1865 0720 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1865      6F5F4952 
 1865      515F6469 
 1865      7361626C 
 1865      655F636F 
 1866              	.LASF48:
 1867 0738 50726554 		.ascii	"PreTaskHook_Context\000"
 1867      61736B48 
 1867      6F6F6B5F 
 1867      436F6E74 
 1867      65787400 
 1868              	.LASF50:
 1869 074c 53746172 		.ascii	"StartupHook_Context\000"
 1869      74757048 
 1869      6F6F6B5F 
 1869      436F6E74 
 1869      65787400 
 1870              	.LASF29:
 1871 0760 66697273 		.ascii	"first\000"
 1871      7400
 1872              	.LASF41:
 1873 0766 6E657874 		.ascii	"next\000"
ARM GAS  C:\Users\robom\AppData\Local\Temp\ccDXGI80.s 			page 54


 1873      00
 1874              	.LASF96:
 1875 076b 45455F72 		.ascii	"EE_rq_lookup\000"
 1875      715F6C6F 
 1875      6F6B7570 
 1875      00
 1876              	.LASF74:
 1877 0778 45455F49 		.ascii	"EE_IRQ_end_instance\000"
 1877      52515F65 
 1877      6E645F69 
 1877      6E737461 
 1877      6E636500 
 1878              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
